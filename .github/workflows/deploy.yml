# This is a basic workflow to help you get started with Actions
name: Build and Deploy Spring Boot to AWS EC2 # workflow의 이름 지정

on:
  push:
    branches: [ main ] # main branch가 push 됐을때

env: # 변수를 설정해서 사용할 수 있다.
  PROJECT_NAME: cicd_project # 버킷에 저장할 프로젝트 폴더이름
  BUCKET_NAME: hugh-cicd-bucket # s3 생성시 지정한 이름
  CODE_DEPLOY_APP_NAME: cicdapp # CodeDeploy의 앱 이름
  DEPLOYMENT_GROUP_NAME: cicdapp_deploy # CodeDeploy의 배포그룹 이름

# jobs.build.runs-on : 액션을 실행시키는 Runner의 운영체제
# jobs.build.steps : 액션의 실제 수행 내용. 단계별로 name과 수행동작을 적어줌
jobs:
  build:
    runs-on: ubuntu-latest # ubuntu 최신 버전
    steps:
      - name: Checkout # 소스를 가져옴
        uses: actions/checkout@v2

      - name: Setup Java JDK 11 # JDK 11 셋업
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew # gradlew 사용 권한 부여
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make Zip File # zip 파일 생성
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials # AWS 자격 증명
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3 # S3 업로드 # aws s3 cp : s3로 파일을 업로드 하는 동작
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy # CodeDeploy에 배포 요청 # aws deploy : CodeDeploy에 배포단위를 생성하는 동작
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip